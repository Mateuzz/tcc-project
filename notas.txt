PirateFord/pirateFort.glb
floresta/Demo_01.glb
Skull.glb

PirateFord
PirateFordPerto
Floresta
Floresta com mais luzes

Cenas
    # Simples -> pirate Ford (ambient light)
    # Cena Complexa (floresta) (ambient light)
        2 -> ambient light + directional light + 5-10 point light
        3 -> pos processing (fog, motion blur, bloom, bright contrast, fxaa (anti aliasing), hue saturation, sepia, vignetting)
    # Teste de Animação (skull) => (1 milhao)
    # teste de sistema de particulas


Metricas 
    dev tools (memoria ram, memoria ram enquanto carrega, cpu, cpu enquanto carrega)
    tempo de inicializacao
    fps
    - tempo medio (100% truncado, 95% truncado, 99% truncado, low 1%)
        - periodo de 1 minuto
        - dois computadores
        - chrome + firefox

GERAL
    ?? Checar as propriedades dos materiais PBR
    1 - Referencial Teorico
        1.1 - PAULO = Capiutlos de funcionalidades 
        1.2 - PAULO = Capitulo de biblioteca
    2 - Resumo
        2.1 - Finalizar com conclusão
    3 - Testes
        3.1 - Numero de Triangulos de cada cena + tamanho e quantidade de texturas (OK)
        3.2 - Criar Library de testar tempo de inicializacao (OK)
        3.3 - Criar library de fps (fps, medio, 1% low, media truncada) (OK)
        3.4 - Configurar camera para cada biblitoeca (fov e pos) e gui (OK)
        3.5 - Checar uso de memória ram e cpu ao inicializar biblioteca ()
        3.6 - Verificar tempo de inicialização para playcanvas (OK)
        3.6 - Checar estatisticas de cada biblioteca ao longo de 1 minuto
            Teste Pirate Ford (perto longe)
            Teste Floresta (perto longe)
            Floresta merged (perto longe)
            Teste Floresta com 5 luzes  (perto)
            teste Floresta com 5 luzes + sombras? (perto)
            Teste Floresta com post processing (perto)
                anti aliasing,
                algum outro efeito famoso
            Teste Skull animada
    4 - Metodologia
        4.1 - Escrever Capitulo sobre claygl e padronizar o restante (adicionar codigo fonte) (OK)
    5 - Resultados
        5.1 - Explicar documentacao (api, guia, exemplos, programas, codigo fonte)
        5.2 - Explicar estatisticas de Github
        5.3 - Funcionalidades Presentes (next)
        5.4 - Explicar tamanho das bibliotecas (+-)
        5.5 - Testes de performance
    6 - Corrigir Ortografia
    7 - Conclusao
    8 - Anexo com codigo fonte e link do github

## Modelos 
	Skull: 1126158 triangles -> Lambert e phong material (apenas reflexao e specular)
    Florest: 2076694 triangles -> 1 texturas x256 (1228 meshes)
    FlorestMerged: 2076694 triangles -> 1 texturas x256 (1 meshe)
    Pirate Ford: 90334 triangles -> 4 1024x 1 512x  (2 fontes de luzes ponto + 1 direcional) (7)

## Fontes carbon
    playcanvas
    https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas/engine (2023)

    babylon
    https://doc.babylonjs.com/features/starterSceneCode (s.d)

    three
    https://threejs.org/docs/#manual/en/introduction/Creating-a-scene (s.d)

    Claygl
    https://github.com/pissang/claygl (2018)

## Render Defaults
	geometrie
	material
		light
			ambient light
			point light
		albedo map
		ambient occlusion map
		metalic map
		bump map / normal
		enviroment map - three
		displacement map
		metalness
		roughtness
		flatshading

## Referencial Teorico
- Adicionar bibliotecas
- Adicionar novos conceitos de programação grafica
	- animacao esqueletal,
	- materials
	- geometries
	- iluminação
	- sombras
	- lightmaps
	- physical based rendering
        - Propriedades dos materiais??
	- pos processing
		- fog, blur, cores,

## Categorias Funcionalidades
materiais


TABELA 1

PROPRIEDADES MATERIAIS ()
    transparencia (alpha)
        trasnparencia mode (opaque, alpha test, alpha blend, alpha blend e test)
        alpha mode (combine, add, substract, multi, pre multi, one one, maximixed)
        albedo com alpha
    stencil - three

    textures
        albedo
        diffuse - three - claygl
        alpha map - only three
        metalic - three - claygl
        roughness - three - clay
        reflection - no
        refraction - no
        reflectivity  - no 
        micro_surface - no
        bump - three
        emissive - three - claygl
        opacity - no three
        ambient - three
        albedo - no three
        lightmap - three
        detailmap - no thre
        iridesnceMap - three
        anisotropic - no three
        sheen - three
        specular - only three
        transmissionMap(trasnparencia com reflexao) - only three
        enviromentMap - only three
        normal map - three - claygl
        clear coat - three
        clear Coat normal map - Babylon n - three sim
        paralax map - no threee
        decal texture - no three
        occlusion texture (extra) - only three
        displacementMap = only three

        video texture - no three
        procedural texture - no three

    lightnings e colors
        reflectivity number - three
        refraction number - three
        clay - alpha - 

    metalic
        metalic level - three
        roughness level - three
        index of refraction - three
        opacity = three
    
    other levels
        enviroment so level-
        specular so level- 
        directItensity - no three
        thickness- three
        transmission(trasnparencia com reflexao) - only three

    transparent shadow material - baby - three(com material)
    multi material per mesh - baby
    material per face = baby
    custom shader material - baby + three


RENDERING MODE
    Wireframe - three
    Point cloud
    flatShading - three
    smoothShading


PostProcessing
    tonemapping - babylon three




    particulas (sim ou nao)
    animacao esqueletal + blending? + weight?
    shadows ?
        transparent material
        filters
    
        texture sizing
        samples
        filter (pfc)?

    wegl2 support (sim ou nao)
    tecnicas de otimizacao?+
        instanced rendering
        merge meshes
        bake lightmaps

    tipos de editores presentes
        babylon + three + playcanvas
    pos processamneto disponiveis
        fog, motion blur, deep of field
        anti aliasing 2 tipos, bloom, tonemaPapping
    tipos de luzes suportados
        point light, spot light, directional light, ambient light
    geometrias pre disponiveis
    library assets
        materiais pre prontos
        texturas pre prontas
        
    utilities
        config da camera (fov, near, perspecive, far, OrbitControl, freeControl)
        sistema de colisao presente
        exportar cena (formatos)
        renderizacao de fluidos
        + outros de cada uma
    bugs observados
    enviroment
        skybox?
        cubemap?

ALGUMAS FUNCIONALIDES JA PERCEBIDAS
    Threejs
    3d, materials, cameras, lightnings, fogs, animations, shadows, loading

    babylon js
    3d, amaterial, camera, lights, fogs, animation, post processing, loading, particles

    play
    3d, materials, animations, lights, shadows, lightmap, occlusion, runtime lightmap, clustered light, particles, loading


Calcular fps
    [https://www.clicktorelease.com/blog/calculating-fps-with-requestIdleCallback/](https://www.clicktorelease.com/blog/calculating-fps-with-requestIdleCallback/)
